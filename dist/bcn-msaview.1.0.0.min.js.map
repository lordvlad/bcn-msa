{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/index.js","node_modules/biojs-util-colorschemes/index.js","node_modules/biojs-util-colorschemes/src/buried.js","node_modules/biojs-util-colorschemes/src/cinema.js","node_modules/biojs-util-colorschemes/src/clustal.js","node_modules/biojs-util-colorschemes/src/clustal2.js","node_modules/biojs-util-colorschemes/src/helix.js","node_modules/biojs-util-colorschemes/src/hydrophobicity.js","node_modules/biojs-util-colorschemes/src/index.js","node_modules/biojs-util-colorschemes/src/lesk.js","node_modules/biojs-util-colorschemes/src/mae.js","node_modules/biojs-util-colorschemes/src/nucleotide.js","node_modules/biojs-util-colorschemes/src/purine.js","node_modules/biojs-util-colorschemes/src/selector.js","node_modules/biojs-util-colorschemes/src/strand.js","node_modules/biojs-util-colorschemes/src/taylor.js","node_modules/biojs-util-colorschemes/src/turn.js","node_modules/biojs-util-colorschemes/src/zappo.js","node_modules/extend/index.js","src/MSASource.js","src/request.js"],"names":[],"mappings":"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","file":"bcn-msaview.1.0.0.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var request = require('./request')\n, MSA = require('./MSASource')\n, extend = require('extend')\n, colorSchemeSelector = require('biojs-util-colorschemes').selector\n;\n\nvar isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\nvar isFirefox = typeof InstallTrigger !== 'undefined';   // Firefox 1.0+\nvar isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;\n    // At least Safari 3+: \"[object HTMLElementConstructor]\"\nvar isChrome = !!window.chrome && !isOpera;              // Chrome 1+\nvar isIE = /*@cc_on!@*/false || !!document.documentMode; // At least IE6\n\n/**\n * Helpers\n */\n\nvar floor = Math.floor.bind(Math);\nvar ceil = Math.ceil.bind(Math);\n\nfunction minmaxval(min, max, val) {\n    if (typeof min !== 'undefined' && val < min) return min |0;\n    if (typeof max !== 'undefined' && val > max) return max |0;\n    return val |0;\n}\n\nfunction normalizeWheelSpeed(event) {\n    var raw, normalized = {x: 0, y: 0};\n    if (event.wheelDelta) {\n        normalized.x = (event.wheelDeltaX % 120 - 0) == -0\n            ? event.wheelDeltaX / 120\n            : event.wheelDeltaX / 12;\n        normalized.y = (event.wheelDeltaY % 120 - 0) == -0\n            ? event.wheelDeltaY / 120\n            : event.wheelDeltaY / 12;\n    } else {\n        raw = event.deltaY ? event.deltaY : event.detail;\n        normalized.y = -(raw % 3 ? raw * 10 : raw / 3);\n        raw = event.deltaX ? event.deltaX : event.detail;\n        normalized.x = -(raw % 3 ? raw * 10 : raw / 3);\n    }\n\n    return normalized;\n}\n\n/**\n * Create MutliSequenceAlignment Viewer\n * Options include\n *     font: {string} like '12px monospace'\n *     lineHeight: {number}\n *     labelWidth: {number}\n *     leftMargin: {number}\n *     letterSpacing: {number}\n *     cursorColor: {string} like 'rgba(128, 128, 128, 0.2)'\n *     loadingText: {string}\n *     colorScheme: {string} provided by biojs-util-colorschemes\n *\n * @constructor\n * @param {object} root\n * @param {object} opt\n */\n\nfunction MSAView (root, opt) {\n\n    // include default opt and opt from DOM dataset\n    opt = extend({}, MSAView.defaultOptions, root.dataset, opt);\n\n    root.msaview = this;\n\n    // create stage\n    var cvs = document.createElement('canvas');\n\n    root.appendChild(cvs);\n\n    var colorScheme = colorSchemeSelector.getColor(opt.colorScheme);\n    var scroll = {x: 0|0, y: 0|0, maxX: 0|0, maxY: 0|0};\n    var aln = new MSA(root.dataset.alignment);\n    var ctx = cvs.getContext('2d');\n    var rect = null;\n    var mouse = null;\n    var LOCK = false;\n    var drawAgain = false;\n    var charWidth = null;\n    var em = null;\n    var lineHeight = opt.lineHeight;\n    var letterSpacing = opt.letterSpacing;\n    var labelWidth = opt.labelWidth;\n    var leftMargin = opt.leftMargin;\n\n    // apply options\n    if ('bcnMsaFullscreen' in opt)\n        root.style.width = root.style.height = '100%';\n\n    // set cvs proportions\n    cvs.width = root.offsetWidth;\n    cvs.height = root.offsetHeight;\n\n    var H = cvs.clientHeight;\n    var W = cvs.clientWidth;\n\n    // attach event handlers\n    if ('onwheel' in cvs) {\n        cvs.addEventListener('wheel', onScroll);\n    } else if ('onmousewheel' in cvs) {\n        cvs.addEventListener('mousewheel', onScroll);\n    }\n\n    cvs.addEventListener('mousemove', onPointerMove);\n    cvs.addEventListener('mouseleave', onPointerOut);\n    cvs.addEventListener('mousedown', onPointerDown);\n    cvs.addEventListener('mouseup', onPointerUp);\n    cvs.addEventListener('contextmenu', function (e) {e.preventDefault();});\n\n    this.setFont = function (font) {\n        var i;\n\n        ctx.font = font;\n        charWidth = (ctx.measureText('x').width + 1) |0;\n        em = (charWidth + letterSpacing) |0;\n        rect = cvs.getBoundingClientRect();\n    };\n\n    this.setFont(opt.font);\n\n    var tracks = [];\n    var view = {\n        height: (floor(H / lineHeight) - 4) |0\n        , seqOffset: (labelWidth + letterSpacing + leftMargin) |0\n        , labelTruncate: ((labelWidth - leftMargin) / (charWidth-1)) |0\n    };\n\n    updateView();\n\n    function updateView () {\n\n        if (LOCK)\n            return LOCK;\n\n        if (!(view))\n            return Promise.resolve();\n\n        return (LOCK = Promise.all([\n            aln.getLines(view.offsetY, view.offsetY + view.height)\n            , aln.getSize()\n        ]).then(function (res) {\n\n            tracks = res[0];\n            view.alignment = res[1].alignment;\n            view.count = res[1].sequenceCount;\n            view.sequenceWidth = res[1].sequenceWidth;\n\n            scroll.maxX = floor(view.sequenceWidth * em)\n                - W + opt.labelWidth + opt.leftMargin;\n            scroll.maxY = (res[1].sequenceCount - view.height)\n                * opt.lineHeight - H;\n\n            view.lastOffsetY = view.offsetY;\n            LOCK = false;\n\n            setTimeout(draw, 10);\n        }));\n    }\n\n    function onScroll (e) {\n\n        if (LOCK)\n            return;\n\n        rect = cvs.getBoundingClientRect();\n        dx = e.deltaX |0;\n        dy = e.deltaY |0;\n\n        if (isFirefox) {\n            dx = dx * 10 |0;\n            dy = dy * 10 |0;\n            return console.log(e);\n        }\n\n        scroll.lastX = scroll.x;\n        scroll.lastY = scroll.y;\n\n        scroll.x = minmaxval(0, scroll.maxX, scroll.x + dx);\n        scroll.y = minmaxval(0, scroll.maxY, scroll.y + dy);\n\n        draw();\n    }\n\n    function onPointerOut () {\n        mouse = null;\n        draw();\n    }\n\n    function onPointerMove (e) {\n        rect = cvs.getBoundingClientRect();\n        mouse = {\n            left: mouse && mouse.left\n            , right: mouse && mouse.right\n            , middle: mouse && mouse.middle\n            , y: e.clientY - rect.top\n            , x: e.clientX - rect.left\n        };\n\n\n\n        draw();\n    }\n\n    function onPointerDown (e) {\n        if (!mouse) return;\n\n        switch (e.which) {\n        case 1: mouse.left = true; break;\n        case 3: mouse.right = true; break;\n        case 2: mouse.middle = true; break;\n        }\n\n        if (mouse.middle)\n            scroll.pan = {x: mouse.x, y: mouse.y};\n\n        if (mouse.left)\n            view.mark = {sx: mouse.sx, sy: mouse.sy};\n\n        draw();\n    }\n\n    function onPointerUp (e) {\n        if (mouse.middle)\n            scroll.pan = null;\n\n        switch (e.which) {\n            case 1: mouse.left = false; break;\n            case 3: mouse.right = false; break;\n            case 2: mouse.middle = false; break;\n        }\n\n        draw();\n    }\n\n    function draw () {\n        return drawAgain ? null : requestAnimationFrame(_draw);\n    }\n\n    function _draw (t) {\n\n        drawAgain = false;\n\n        var x, y, dx, dy, i, j, k, l, m, n, len = tracks.length\n        , h = mouse && (mouse.sx < view.offsetX) // is mouse over labels?\n        , redrawLabels = true\n        , redrawRuler = true\n        ;\n\n        // check mouse middle button scroll\n        if (mouse && mouse.middle) {\n            scroll.x = minmaxval(0, scroll.maxX, scroll.x\n                                 + ((mouse.x - scroll.pan.x) / 10));\n            scroll.y = minmaxval(0, scroll.maxY, scroll.y\n                                 + ((mouse.y - scroll.pan.y) / 10));\n\n            drawAgain = true;\n        }\n\n        view.offsetX = (scroll.x / em)         |0;\n        view.offsetY = (scroll.y / lineHeight) |0;\n\n        // get mouse coordinates relative to sequence and\n        // aminoacid position\n        if (mouse) {\n            mouse.sx = (((mouse.x - view.seqOffset) / em) + view.offsetX) |0;\n            mouse.sy = ((mouse.y / lineHeight) - 2 + view.offsetY)        |0;\n        }\n\n\n        // maybe we need to fetch new lines from the underlying source\n        if (!LOCK && (view.offsetY !== view.lastOffsetY))\n            updateView();\n\n        // clear canvas, leave labels and ruler intact if possible\n        x = 0;\n        y = 0;\n        if (scroll.lastY === scroll.y) {\n            x = view.seqOffset;\n            redrawLabels = false;\n        }\n        if (scroll.lastX === scroll.x) {\n            y = lineHeight;\n            redrawRuler = false;\n        }\n\n        ctx.clearRect(x, y, W, H);\n\n        // loading text\n        if (LOCK)\n            ctx.fillText(opt.loadingText, leftMargin, lineHeight);\n\n        // ruler\n        if (redrawRuler) {\n            x = view.seqOffset   |0; // start pos on x axis\n            y = lineHeight * 2   |0; // write ruler on 2nd line\n            i = view.offsetX + 1 |0; // offsetX are the positions hidden on the left\n            // positions are 1-indexed, not 0-indexed, thus +1\n            j = 0                |0; // state variable\n\n            while (x < W) {\n                if (j === 2) {\n                    j = 1 |0;\n                }\n\n                if (j === 0) {\n                    ctx.fillText(i, x, y);   // draw first number\n                    j = 2 |0;                // jump at least 2 numbers after the first one\n                    // thus avoiding the first number overlapping\n                    // with the next\n                } else {\n                    if (i % 10 === 0) {\n                        ctx.fillText(i+'', x, y); // draw every tenth number\n                        j = 5 |0;                 // remember that we have found a base-5 number\n                    }\n                    else if (i % 5 === 0) {\n                        ctx.fillText('.', x, y); // draw a dot for every fifth\n                        j = 5 |0;                // remember that we have found a base-5 number\n                    }\n                }\n\n                i = i + j      |0;       // advance the number\n                x = x + j * em |0;       // advance our x-position\n            }\n        }\n\n        // tracks\n        if (len) {\n\n            // colors\n            x = view.seqOffset - em/4   |0; // color boxes have a em/4 offset to the left\n            i = view.offsetX            |0; // start index\n\n            while (x < W) {\n\n                y = (lineHeight * 1.3)  |0; // start pos on y is 3rd line\n                j = 0                   |0; // track index\n                n = lineHeight          |0; // box height\n                l = 0[0];                   // undefined last seen color\n\n                while (j !== len) {\n\n                    k = tracks[j] && tracks[j].sequence[i]; // amino acid\n                    m = colorScheme[k];                     // new color\n\n                    // if last seen and current color are the same,\n                    // increase box height\n                    if (m === l) {\n                        n = (n + lineHeight) |0;\n                    } else {\n                        // draw box if color is set\n                        if (l) {\n                            ctx.fillStyle = l;\n                            ctx.fillRect(x, y, em, n);\n                        }\n\n                        y = y + n      |0; // new y position\n                        n = lineHeight |0; // reset box height\n                    }\n\n                    l = m;       // update last seen color\n                    j = j + 1|0; // next sequence\n                }\n\n                // close last box\n                if (l) {\n                    ctx.fillStyle = l;\n                    ctx.fillRect(x, y, em, n);\n                }\n\n                x = x + em |0; // next draw column\n                i = i + 1  |0; // next sequence column\n            }\n\n\n            // sequences\n            ctx.fillStyle = 'black'; // black characters\n            y = lineHeight * 3   |0; // start pos on y is 3rd line\n            i = 0                |0; // track index\n\n            while ((k = tracks[i])) {\n\n                // draw sequence\n                x = view.seqOffset   |0; // start pos on x axis\n                j = view.offsetX     |0; // aminoacid index\n\n                while ((l = k.sequence[j]) && (x < W)) {\n\n                    // write amino acid\n                    ctx.fillText(l, x, y);\n\n                    j = j + 1  |0; // advance aminoacid index\n                    x = x + em |0; // advance one character\n                }\n\n                if (redrawLabels) {\n\n                    // if mouse is over the label, draw full label, with a\n                    // white background, else draw tuncated label\n                    if (h && (mouse.sy === view.offsetY + i)) {\n\n                        ctx.save();\n                        ctx.fillStyle = 'rgb(255, 255, 255)';\n                        ctx.fillRect(leftMargin, y - lineHeight + 2\n                                     , W, lineHeight + 4);\n                        ctx.restore();\n                        ctx.fillText(k.label, leftMargin, y);\n                    } else {\n                        ctx.fillText(k.label.substr(0, view.labelTruncate), leftMargin, y);\n                    }\n                }\n\n                i = i + 1          |0; // advance track index\n                y = y + lineHeight |0; // advance one line\n            }\n        }\n        return;\n    }\n}\n\n\nMSAView.defaultOptions = {\n    font: '12px monospace'\n    , lineHeight: 14  |0  // px force Int32 arithmetic\n    , labelWidth: 100 |0  // px\n    , leftMargin: 20  |0  // px\n    , letterSpacing: 8|0  // px between aminoacids\n    , cursorColor: 'rgba(128, 128, 128, 0.2)'\n    , loadingText: 'loading...'\n    , colorScheme: 'clustal2'\n};\n\n\nif (typeof define === 'function' && define.amd) {\n    // require.js module\n    define(MSAView);\n} else {\n    // Browser globals\n    window.MSAView = MSAView;\n}\n","module.exports = require('./src/index.js')\n","module.exports = {\n  A: \"#00a35c\",\n  R: \"#00fc03\",\n  N: \"#00eb14\",\n  D: \"#00eb14\",\n  C: \"#0000ff\",\n  Q: \"#00f10e\",\n  E: \"#00f10e\",\n  G: \"#009d62\",\n  H: \"#00d52a\",\n  I: \"#0054ab\",\n  L: \"#007b84\",\n  K: \"#00ff00\",\n  M: \"#009768\",\n  F: \"#008778\",\n  P: \"#00e01f\",\n  S: \"#00d52a\",\n  T: \"#00db24\",\n  W: \"#00a857\",\n  Y: \"#00e619\",\n  V: \"#005fa0\",\n  B: \"#00eb14\",\n  X: \"#00b649\",\n  Z: \"#00f10e\"\n};\n","module.exports = {\n  A: \"#BBBBBB\",\n  B: \"grey\",\n  C: \"yellow\",\n  D: \"red\",\n  E: \"red\",\n  F: \"magenta\",\n  G: \"brown\",\n  H: \"#00FFFF\",\n  I: \"#BBBBBB\",\n  J: \"#fff\",\n  K: \"#00FFFF\",\n  L: \"#BBBBBB\",\n  M: \"#BBBBBB\",\n  N: \"green\",\n  O: \"#fff\",\n  P: \"brown\",\n  Q: \"green\",\n  R: \"#00FFFF\",\n  S: \"green\",\n  T: \"green\",\n  U: \"#fff\",\n  V: \"#BBBBBB\",\n  W: \"magenta\",\n  X: \"grey\",\n  Y: \"magenta\",\n  Z: \"grey\",\n  Gap: \"grey\"\n};\n","module.exports = {\n  A: \"orange\",\n  B: \"#fff\",\n  C: \"green\",\n  D: \"red\",\n  E: \"red\",\n  F: \"blue\",\n  G: \"orange\",\n  H: \"red\",\n  I: \"green\",\n  J: \"#fff\",\n  K: \"red\",\n  L: \"green\",\n  M: \"green\",\n  N: \"#fff\",\n  O: \"#fff\",\n  P: \"orange\",\n  Q: \"#fff\",\n  R: \"red\",\n  S: \"orange\",\n  T: \"orange\",\n  U: \"#fff\",\n  V: \"green\",\n  W: \"blue\",\n  X: \"#fff\",\n  Y: \"blue\",\n  Z: \"#fff\",\n  Gap: \"#fff\"\n};\n","module.exports = {\n  A: \"#80a0f0\",\n  R: \"#f01505\",\n  N: \"#00ff00\",\n  D: \"#c048c0\",\n  C: \"#f08080\",\n  Q: \"#00ff00\",\n  E: \"#c048c0\",\n  G: \"#f09048\",\n  H: \"#15a4a4\",\n  I: \"#80a0f0\",\n  L: \"#80a0f0\",\n  K: \"#f01505\",\n  M: \"#80a0f0\",\n  F: \"#80a0f0\",\n  P: \"#ffff00\",\n  S: \"#00ff00\",\n  T: \"#00ff00\",\n  W: \"#80a0f0\",\n  Y: \"#15a4a4\",\n  V: \"#80a0f0\",\n  B: \"#fff\",\n  X: \"#fff\",\n  Z: \"#fff\"\n};\n","module.exports = {\n  A: \"#e718e7\",\n  R: \"#6f906f\",\n  N: \"#1be41b\",\n  D: \"#778877\",\n  C: \"#23dc23\",\n  Q: \"#926d92\",\n  E: \"#ff00ff\",\n  G: \"#00ff00\",\n  H: \"#758a75\",\n  I: \"#8a758a\",\n  L: \"#ae51ae\",\n  K: \"#a05fa0\",\n  M: \"#ef10ef\",\n  F: \"#986798\",\n  P: \"#00ff00\",\n  S: \"#36c936\",\n  T: \"#47b847\",\n  W: \"#8a758a\",\n  Y: \"#21de21\",\n  V: \"#857a85\",\n  B: \"#49b649\",\n  X: \"#758a75\",\n  Z: \"#c936c9\"\n};\n","module.exports = {\n  A: \"#ad0052\",\n  B: \"#0c00f3\",\n  C: \"#c2003d\",\n  D: \"#0c00f3\",\n  E: \"#0c00f3\",\n  F: \"#cb0034\",\n  G: \"#6a0095\",\n  H: \"#1500ea\",\n  I: \"#ff0000\",\n  J: \"#fff\",\n  K: \"#0000ff\",\n  L: \"#ea0015\",\n  M: \"#b0004f\",\n  N: \"#0c00f3\",\n  O: \"#fff\",\n  P: \"#4600b9\",\n  Q: \"#0c00f3\",\n  R: \"#0000ff\",\n  S: \"#5e00a1\",\n  T: \"#61009e\",\n  U: \"#fff\",\n  V: \"#f60009\",\n  W: \"#5b00a4\",\n  X: \"#680097\",\n  Y: \"#4f00b0\",\n  Z: \"#0c00f3\"\n};\n","module.exports.selector = require(\"./selector\");\n\n// basics\nmodule.exports.taylor = require(\"./taylor\");\nmodule.exports.zappo= require(\"./zappo\");\nmodule.exports.hydro= require(\"./hydrophobicity\");\n\nmodule.exports.clustal = require(\"./clustal\");\nmodule.exports.clustal2 = require(\"./clustal2\");\n\nmodule.exports.curied = require(\"./buried\");\nmodule.exports.cinema = require(\"./cinema\");\nmodule.exports.nucleotide  = require(\"./nucleotide\");\nmodule.exports.helix  = require(\"./helix\");\nmodule.exports.lesk  = require(\"./lesk\");\nmodule.exports.mae = require(\"./mae\");\nmodule.exports.purine = require(\"./purine\");\nmodule.exports.strand = require(\"./strand\");\nmodule.exports.turn = require(\"./turn\");\n","module.exports = {\n  A: \" orange\",\n  B: \" #fff\",\n  C: \" green\",\n  D: \" red\",\n  E: \" red\",\n  F: \" green\",\n  G: \" orange\",\n  H: \" magenta\",\n  I: \" green\",\n  J: \" #fff\",\n  K: \" red\",\n  L: \" green\",\n  M: \" green\",\n  N: \" magenta\",\n  O: \" #fff\",\n  P: \" green\",\n  Q: \" magenta\",\n  R: \" red\",\n  S: \" orange\",\n  T: \" orange\",\n  U: \" #fff\",\n  V: \" green\",\n  W: \" green\",\n  X: \" #fff\",\n  Y: \" green\",\n  Z: \" #fff\",\n  Gap: \" #fff\"\n};\n","module.exports = {\n  A: \" #77dd88\",\n  B: \" #fff\",\n  C: \" #99ee66\",\n  D: \" #55bb33\",\n  E: \" #55bb33\",\n  F: \" #9999ff\",\n  G: \" #77dd88\",\n  H: \" #5555ff\",\n  I: \" #66bbff\",\n  J: \" #fff\",\n  K: \" #ffcc77\",\n  L: \" #66bbff\",\n  M: \" #66bbff\",\n  N: \" #55bb33\",\n  O: \" #fff\",\n  P: \" #eeaaaa\",\n  Q: \" #55bb33\",\n  R: \" #ffcc77\",\n  S: \" #ff4455\",\n  T: \" #ff4455\",\n  U: \" #fff\",\n  V: \" #66bbff\",\n  W: \" #9999ff\",\n  X: \" #fff\",\n  Y: \" #9999ff\",\n  Z: \" #fff\",\n  Gap: \" #fff\"\n};\n","module.exports = {\n  A: \" #64F73F\",\n  C: \" #FFB340\",\n  G: \" #EB413C\",\n  T: \" #3C88EE\",\n  U: \" #3C88EE\"\n};\n","module.exports = {\n  A: \" #FF83FA\",\n  C: \" #40E0D0\",\n  G: \" #FF83FA\",\n  R: \" #FF83FA\",\n  T: \" #40E0D0\",\n  U: \" #40E0D0\",\n  Y: \" #40E0D0\"\n};\n","var Buried = require(\"./buried\");\nvar Cinema = require(\"./cinema\");\nvar Clustal = require(\"./clustal\");\nvar Clustal2 = require(\"./clustal2\");\nvar Helix = require(\"./helix\");\nvar Hydro = require(\"./hydrophobicity\");\nvar Lesk = require(\"./lesk\");\nvar Mae = require(\"./mae\");\nvar Nucleotide = require(\"./nucleotide\");\nvar Purine = require(\"./purine\");\nvar Strand = require(\"./strand\");\nvar Taylor = require(\"./taylor\");\nvar Turn = require(\"./turn\");\nvar Zappo = require(\"./zappo\");\n\nmodule.exports = Colors = {\n  mapping: {\n    buried: Buried,\n    buried_index: Buried,\n    cinema: Cinema,\n    clustal2: Clustal2,\n    clustal: Clustal,\n    helix: Helix,\n    helix_propensity: Helix,\n    hydro: Hydro,\n    lesk: Lesk,\n    mae: Mae,\n    nucleotide: Nucleotide,\n    purine: Purine,\n    purine_pyrimidine: Purine,\n    strand: Strand,\n    strand_propensity: Strand,\n    taylor: Taylor,\n    turn: Turn,\n    turn_propensity: Turn,\n    zappo: Zappo,\n  },\n  getColor: function(scheme) {\n    var color = Colors.mapping[scheme];\n    if (color === undefined) {\n      color = {};\n    }\n    return color;\n  }\n};\n","module.exports = {\n  A: \"#5858a7\",\n  R: \"#6b6b94\",\n  N: \"#64649b\",\n  D: \"#2121de\",\n  C: \"#9d9d62\",\n  Q: \"#8c8c73\",\n  E: \"#0000ff\",\n  G: \"#4949b6\",\n  H: \"#60609f\",\n  I: \"#ecec13\",\n  L: \"#b2b24d\",\n  K: \"#4747b8\",\n  M: \"#82827d\",\n  F: \"#c2c23d\",\n  P: \"#2323dc\",\n  S: \"#4949b6\",\n  T: \"#9d9d62\",\n  W: \"#c0c03f\",\n  Y: \"#d3d32c\",\n  V: \"#ffff00\",\n  B: \"#4343bc\",\n  X: \"#797986\",\n  Z: \"#4747b8\"\n};\n","module.exports = {\n  A: \"#ccff00\",\n  R: \"#0000ff\",\n  N: \"#cc00ff\",\n  D: \"#ff0000\",\n  C: \"#ffff00\",\n  Q: \"#ff00cc\",\n  E: \"#ff0066\",\n  G: \"#ff9900\",\n  H: \"#0066ff\",\n  I: \"#66ff00\",\n  L: \"#33ff00\",\n  K: \"#6600ff\",\n  M: \"#00ff00\",\n  F: \"#00ff66\",\n  P: \"#ffcc00\",\n  S: \"#ff3300\",\n  T: \"#ff6600\",\n  W: \"#00ccff\",\n  Y: \"#00ffcc\",\n  V: \"#99ff00\",\n  B: \"#fff\",\n  X: \"#fff\",\n  Z: \"#fff\"\n};\n","module.exports = {\n  A: \"#2cd3d3\",\n  R: \"#708f8f\",\n  N: \"#ff0000\",\n  D: \"#e81717\",\n  C: \"#a85757\",\n  Q: \"#3fc0c0\",\n  E: \"#778888\",\n  G: \"#ff0000\",\n  H: \"#708f8f\",\n  I: \"#00ffff\",\n  L: \"#1ce3e3\",\n  K: \"#7e8181\",\n  M: \"#1ee1e1\",\n  F: \"#1ee1e1\",\n  P: \"#f60909\",\n  S: \"#e11e1e\",\n  T: \"#738c8c\",\n  W: \"#738c8c\",\n  Y: \"#9d6262\",\n  V: \"#07f8f8\",\n  B: \"#f30c0c\",\n  X: \"#7c8383\",\n  Z: \"#5ba4a4\"\n};\n","module.exports = {\n  A: \"#ffafaf\",\n  R: \"#6464ff\",\n  N: \"#00ff00\",\n  D: \"#ff0000\",\n  C: \"#ffff00\",\n  Q: \"#00ff00\",\n  E: \"#ff0000\",\n  G: \"#ff00ff\",\n  H: \"#6464ff\",\n  I: \"#ffafaf\",\n  L: \"#ffafaf\",\n  K: \"#6464ff\",\n  M: \"#ffafaf\",\n  F: \"#ffc800\",\n  P: \"#ff00ff\",\n  S: \"#00ff00\",\n  T: \"#00ff00\",\n  W: \"#ffc800\",\n  Y: \"#ffc800\",\n  V: \"#ffafaf\",\n  B: \"#fff\",\n  X: \"#fff\",\n  Z: \"#fff\"\n};\n","var hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\nvar undefined;\n\nvar isPlainObject = function isPlainObject(obj) {\n\t'use strict';\n\tif (!obj || toString.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar has_own_constructor = hasOwn.call(obj, 'constructor');\n\tvar has_is_property_of_method = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !has_own_constructor && !has_is_property_of_method) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {}\n\n\treturn key === undefined || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\t'use strict';\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target === copy) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray(src) ? src : [];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if (copy !== undefined) {\n\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n","var request = require('./request')\n, extend = require('extend')\n;\n\nfunction min(arr) {\n    return Math.min.apply(Math, arr);\n}\n\nfunction max(arr) {\n    return Math.max.apply(Math, arr);\n}\n\nfunction createLineCache () {\n    var lc = [], idx = [], len = MSA.numCachedLines;\n\n    var to = null;\n    function trim(dir) {\n        var a, b;\n        while ( (a=max(idx)) - (b=min(idx)) > len) {\n            i = dir ? b : a;\n            delete lc[i];\n            idx.splice(idx.indexOf(i), 1);\n        }\n    }\n\n    lc.set = function (i, val) {\n        clearTimeout(to);\n        var dir = i > max(idx) ? 1 : 0;\n        this[i] = val;\n        idx.push(i);\n        if (this.length > len) {\n            to = setTimeout(trim.bind(null, dir), 300);\n        }\n    };\n    Object.defineProperties(lc, {\n        'lastDefinedIndex': {\n            get: function () {return max(idx);}\n        }, 'firstDefinedIndex': {\n            get: function () {return min(idx);}\n        }\n    });\n\n    return lc;\n}\n\n\nfunction MSA(src) {\n    this.src = null;\n    this.href = null;\n    this.sizePromise = null;\n    this.lineCache = createLineCache();\n    this.linePromises = [];\n    this.LOCK = false;\n\n    if (!(/http/.test(src))) {\n        this.src = src;\n    } else {\n        this.href = src;\n    }\n}\n\n\n/** @prop {number} set the number of lines that should be cached at most */\nMSA.numCachedLines = 3000;\n\n/** @prop {number} set the number of lines to fetch eagerly */\nMSA.numPrefetchLines = 1000;\n\n/** @prop {number} fraction at which to trigger prefetch */\nMSA.numPrefetchTrigger = 0.5;\n\n\n/**\n * Fetch and calculate different aspects of the MSA.\n * Returns the promise of an object:\n *   {\n *     {number} size       The bytesize of the whole MSA file\n *     {number} width      The widht of the MSA, i.e. the line length\n *                      of those lines actually containing sequences\n *     {number} offset     The byte offset to the first sequence\n *     {number} count      The number of sequences in the MSA\n *     {number} labelWidth The number of characters reserved for labels\n *                      in front of the sequences\n *   }\n *\n * @return {Promise}\n */\n\nMSA.prototype.getSize = function () {\n\n    var lineCache = this.lineCache;\n\n    // Return the promise if the quers has been\n    // performed before\n    if (this.sizePromise)\n        return this.sizePromise;\n\n\n    // Get the headers for the file to find out the total\n    // file size\n    var headP = request(this.href, {method: 'HEAD'})\n        .then(function (req){\n            return {size: parseInt(req.getResponseHeader('Content-Length'), 10)};\n        });\n\n    // get the first 10 kb to find out the line width, label width\n    // and byte offset to the first sequence\n    var startP = request(this.href, {headers: {range: 'bytes=0-10240'}})\n        .then(function (req) {\n            var i = 0, lineWidth, labelWidth, lines = req.response.split('\\n')\n            , lOffset = 1, offset = lines[0].length + 1, seq;\n\n            // walk down the file, for each 'empty'\n            // line add one to the offset, because of the \\n\n            // removed during the split('\\n')\n            while (!lines[++i].length) {\n                offset++;\n                lOffset++;\n            }\n\n            // i is now the first line with an actual sequence\n            // add one because of the \\n we lost in the split\n            lineWidth = lines[i].length + 1;\n            labelWidth = lines[i].match(/.* +/)[0].length;\n\n            // now push the rest of the lines onto the cache\n            // if they are whole\n            while ((lines[i].length + 1) === lineWidth) {\n                 seq = {\n                    label: lines[i].substr(0, labelWidth)\n                    , sequence: lines[i].substr(labelWidth)\n                };\n                lineCache.set(i-lOffset, seq);\n                i++;\n            }\n\n            return {\n                labelWidth: labelWidth\n                , lineWidth: lineWidth\n                , sequenceWidth: lineWidth - labelWidth\n                , offset: offset\n            };\n        }.bind(this));\n\n    // get last 10kb to get the alignment from the last line\n    var endP = request(this.href, {headers: {range: 'bytes=-10240'}})\n        .then(function (req) {\n            var lines = req.response.split('\\n')\n            , aln = lines.slice(-2)[0]\n            ;\n\n            return {alignment: aln};\n        });\n\n    // and count the number of sequences\n    this.sizePromise = Promise.all([headP, startP, endP])\n        .then(function (props) {\n            // merge everything into one object\n            props = extend({}, props[0], props[1], props[2]);\n\n            // calculate sequence count and width\n            props.sequenceCount = (props.size - props.offset) / props.lineWidth - 2;\n\n            return props;\n        });\n\n    return this.sizePromise;\n};\n\n/**\n * Returns the Promise of a string containing\n * the actual alignment information\n *\n * @return {Promise}\n */\n\nMSA.prototype.getAlignment = function () {\n    return this.getSize().then(function (props) {\n        return props.alignment;\n    });\n};\n\n/**\n * Returns the Promise of an integer containing\n * the sequence count\n *\n * @return {Promise}\n */\n\nMSA.prototype.getCount = function () {\n    return this.getSize().then(function (props) {\n        return props.sequenceCount;\n    });\n};\n\n/**\n * Return the Promise of a single sequence object\n * containing\n * {\n *   {string} label\n *   {string} sequence\n * }\n *\n * @param {number} l line to get, 0-indexed\n * @return {Promise}\n */\n\nMSA.prototype.getLine = function (l) {\n    var x;\n\n    if ((x = this.lineCache[l])) {\n        return Promise.resolve(x);\n    }\n\n    return this.getLines(l, l, true).then(function (lines) {return lines[0];});\n};\n\n/**\n * Return the Promise of an array of sequence objects\n * containing\n * {\n *   {string} label\n *   {string} sequence\n * }\n *\n * @param {number} a              first line to get, 0-indexed\n * @param {number} [b]            last line to get, defaults to a\n * @param {boolean} [doNotPrefetch] flag to supress prefetch\n * @return {Promise}\n */\n\nMSA.prototype.getLines = function (a, b, doNotPrefetch) {\n    b = b || a;\n\n    var lineCache = this.lineCache\n    , linePromises = this.linePromises\n    , href = this.href\n    ;\n\n    return this.getSize().then(function (props) {\n        var labelWidth = props.labelWidth\n        , lineWidth = props.lineWidth\n        , count = props.sequenceCount\n        , offset = props.offset\n        , res = [], fetch = [], wait = []\n        , range, x, i, p, c, d, e, f\n        ;\n\n\n        if (a > count) {\n            return Promise.resolve(null);\n        }\n\n        if (b > count) {\n            b = count;\n        }\n\n        // get lines from Cache if available\n        for (i = a; i <= b; i++) {\n            if ((x = lineCache[i])) {\n                res.push(x);\n            } else if ((x = linePromises[i])) {\n                if (wait.indexOf(x) === -1) {\n                    wait.push(x);\n                }\n            } else {\n                fetch.push(i);\n            }\n        }\n\n        // trigger eager prefetch\n        if (!doNotPrefetch && !this.LOCK) {\n            e = lineCache.lastDefinedIndex - (MSA.numPrefetchLines * MSA.numPrefetchTrigger);\n            f = lineCache.firstDefinedIndex + (MSA.numPrefetchLines * MSA.numPrefetchTrigger);\n\n            if (b > e && lineCache.lastDefinedIndex < count) {\n                // prefetch forward\n                e = lineCache.lastDefinedIndex;\n                f = min([e + MSA.numPrefetchLines, count]);\n            } else if (a < f && lineCache.firstDefinedIndex > 0) {\n                // prefetch backward\n                f = lineCache.firstDefinedIndex;\n                e = max([f - MSA.numPrefetchLines, 0]);\n            } else {\n                e = f = null;\n            }\n\n            if (e) {\n                this.LOCK = true;\n                this.getLines(e, f, true)\n                    .then(function(){\n                        this.LOCK = false;\n                    }.bind(this));\n            }\n        }\n\n        // if we do not need to fetch more lines\n        // from the remote source, return the\n        // results now\n        if (fetch.length === 0 && wait.length === 0) {\n            return Promise.resolve(res);\n        }\n\n        if (fetch.length > 0) {\n            // construct range request\n            c = min(fetch); d = max(fetch);\n\n            range = [\n                offset + c * lineWidth\n                , offset + (d+1) * lineWidth - 2\n            ].join('-');\n\n            p = request(href, {headers: {range: 'bytes=' + range}})\n                .then(function (req) {\n                    // put all the fetches lines onto the linecache\n                    // and push them to the response\n                    req.response.split('\\n').forEach(function (l, i) {\n                        var seq = {\n                            label: l.substr(0, labelWidth)\n                            , sequence: l.substr(labelWidth)\n                        };\n                        lineCache.set(c+i, seq);\n                        delete linePromises[c+i];\n                    });\n                });\n            wait.push(p);\n            for (i=c;i <=d; i++) {\n                linePromises[i] = p;\n            }\n        }\n\n        return Promise.all(wait).then(function() {\n            return lineCache.slice(a, b+1);\n        });\n    }.bind(this));\n};\n\nmodule.exports = MSA;\n","module.exports = function request(url, opt) {\n    opt = opt || {};\n\n    return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n\n        req.open(opt.method || 'GET', url, true);\n        req.overrideMimeType('text/plain');\n\n        Object.keys(opt.headers || {}).forEach(function (k) {\n            req.setRequestHeader(k, opt.headers[k]);\n        });\n\n        req.onload = function () {\n            return req.status >= 400 ? reject(req) : resolve(req);\n        };\n\n        req.onerror = function (err) {\n            return reject(err);\n        };\n\n        req.send(opt.data || void 0);\n    });\n};\n"],"sourceRoot":"/source/"}